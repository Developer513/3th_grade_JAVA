입출력 스트림과 파일 입출력 

지금까지 사용한 입출력 메소드 
Scanner
System.out.print

스트림 입출력
스트림 = 흐름
버퍼를 가지고 순차적으로 이루어지는 입출력

자바의 입출력 스트림 
응용프로그램과 입출력 장치를 연결하는 소프트웨어 모듈
입력스트림 : 입력장치로부터 자바 프로그램으로 데이터를 전달
출력스트림 : 출력장치로 데이터 출력

자바의 입출력스트림 특징
스트림의 양 끝에 입출력장치와 자바 응용프로그램 연결
스트림은 단방향이다 입력과 출력을 동시에 하는 스트림은 없음
입출력 스트림 기본단위 
크게 두가지로 나뉨 

바이트 스트림 : 바이트
바이너리 파일을 읽는 입력스트림 
입출력되는 데이터를 단순 바이트로 처리

문자스트림 : 문자 2바이트씩 
문자만 입출력하는 스트림
바이너리데이터 처리불가 
텍스트파일을 읽는 입력 스트림
선입선출구조로 되어있다. 
유니코드 문자를 입출력 하는 스트림
이미지 동영상 사용 불가 


jdk 는 입출력 스트림을 클래스 형태로 제공한다. 
바이트 스트림 클래스 
문자 스트림 클래스 나뉨 

스트림은 연결될 수 있다. 

키보드 입력 -> '2', 'a' -> System.in(바이트 입력스트림) -> 010101010 -> InputStreamReader(문자입력스트림) -> '2', 'a' -> 자바 응용프로그램 
InputStreamReader rd = new InputStreamReader(System.in) 

System 클래스는 
err
in
out 이라는 변수들을 가지고 있는데 이 변수들은 스태틱이다 즉 객체가 아닌 클래스 내부에서 존재하는 변수들이다. 

 InputStreamReader 클래스(문자스트림) 는 생성자의 매개변수로 System.in 을 매개변수를 가지는 생성자가 존재한다 
 즉 이 생성자는 바이트스트림을 이용해서 문자 스트림을 만드는 생성자라고 할 수 있다. 
 InputStreamReader rd = new InputStreamReader(System.in) 
 Scanner sc = new Scanner(System.in) 이것도 비슷한 예 

 

 FileReader fin = new FileReader("c:\\test.txt");

 int c;
 whlie((c = fin.read()! = -1) /// 파일을 처음부터 끝까지 바이트 단위로 읽어 들여서 c에 저장 끝에 도달하면 -1 리턴

 근데 읽는건 char 형태인데 변수선언은 int 로 했다. 
 왜? 
 
 문자char는 2바이트로 구성되어있다 char 에서 -1 은 FFFF 이다.
 int 는 4바이트로 구성되어 있으므로 -1 은 FFFF FFFF 이다 따라서
 어떤 파일에 -1 이 있다면 char로 저장할때는 문자열 읽기를 끝나지도 않았는데 while 문을 만족해서 탈출해 버릴 수 있다. 
근데 정수형으로 선언하면 문자 -1과 숫자 -1 을 구별 할 수 있기 때문에 끝까지 읽을 수 있다.

객체를 정수형으로 선언 했을 때 리턴값도 정수형으로 선언되므로 문자 '-1' 경우 0x000000FF 로 리턴된다 
이는 while 조건값의  -1 = 0xFFFFFFFF 와는 엄연히 다른 값이다. 

입출력에서는 오류발생 가능성이 크다. 왜 ?
찾는 파일이 없을경우, 객체를 만들지 않고 read 또는 close 를 하거나 
그래서 입출력 시에는 예외처리를 사용한다. 

read close 는 IOException이 발생 할 수 있다. 
FileNotFoundException 은 IOException의 자식클래스이므로 따로 예외처리를 안해도 된다. 

문자집합과  InputStreamReader를 이용한 텍스트파일 읽기 

FileInputStream fin = new FileInputStream("읽을파일 경로"); //텍스트 파일을 바이트 스트림으로 읽어옴 
InputStreamReader in = new InputStreamReader(fin, "MS949") // 읽어온 바이트 스트림을 문자 스트림으로 바꿈
//MS949 는 읽어들일때 사용하는 문자집합과

InputStreamReader(InputStream in, charset cs)// 스트림 리더의 생성자 
파일 인풋스트림은 인풋 스트림의 서브클래스 이므로 사용가능
연결되는 조합과 안되는 조합이 있음 



FileWriter
FileWriter fout = new FileWriter(경로)
파일안이 이미 내용이 있다면 객체를 만드는 순간 이전에 있던 파일 내용이 사라짐!!!!
복구도 불가능
주의 할 것 

문자단위 쓰기
fout.write('a') 문자 a 출력  //  근데 파일안이 이미 내용이 있다면 객체를 만드는 순간 이전에 있던 파일 내용이 사라짐!!!!
fout.clodw();

블록단위 쓰기
char[] buf = new char[1024];
fout.write(buf,0,buf.length);
///////////////////////////////////////

바이트 스트림 클래스 
바이트 단위의 바이너리 값을 읽고 쓰는 스트림 

클래스 

InputStream
OutputStream
추상 클래스, 바이트 스트림을 다루는 모든 클래스의 슈퍼클래스

FileInputStream
FileOutputStream
파일단위로 읽고씀


DataInputStream
DataOutputStream
자바의 기본 데이터 타입의 값을 바이너리값 그대로 입출력 할때 씀 RAW 값 
/////////////////////////////////////////

버퍼 스트림
버퍼를 가진 스트림 버퍼란? 중간에서 데이터를 임시로 저장하는 공간 

입출력 데이터를 일시적으로 저장하는 버퍼를 이용하여 입출력 효율개선
입출력 시 운영체제의 API 콜 횟수를 줄여 입출력 성능개선
출력시 여러번 출려되는 데이터를 버퍼에 모아두고 한번에 장치로 출력  

사용자의 입장에서는 차이를 느끼기 힘들지만 시스템 성능을 높일 수 있다. 
///////////////////////////////////////

File 클래스 
파일의 경로명을 다루는 클래스는
java.io.File 에 포함 
파일과 디렉터리 경로명의 추상적 표현
파일에 대한 정보(경로, 크기) 등을 알거나 수정(이름수정) 가능 

파일관리깈능
파일 이름변경, 삭제, 디렉터리 생성,  크기 등 파일관리깈능
객체는 파일을 수정하거나 읽을 수 없음 


