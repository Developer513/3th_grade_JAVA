GUI 목적 
그래픽이용 사용자에게 이해하기 쉬운 모양으로 정보 제공 
사용자ㅇ는 마우스나 키보드를 이용하여 쉽게입력 
자바 GUI 특징 
강력한 GUI 컴포넌트 제공 쉬운  GUI 프로그래밍

AWT java.awt 패키지(abstract Windowing Toolkit)
자바가 처음 나왔을 때 함께 배포된 GUI 라이브러리 
운영체제의 GUI 컴포넌트의 도움을 받아 작동 
운영체제에 많은 부탐 오히려 처리속도는 빠름 
운영체제에 의존적임 
중량 GUI 컴포넌트

Swing javax.swing
AWT 기술을  기반으로 순수 자바 언어로 만들어진 라이브러리 
모든AWT 기능+추가된 풍부하고 화려한 고급 컴포넌트
AWT 컴포넌트에 j 자가 덧붗여진 이름의 클래스 
그뢰 J 자로 시작하는 클래스 
운영체제에 의존하지 않음 
경량 GUI 컴포넌트

두 패키지중 하나만 사용한다.

스윙 컴포넌트 예시 
JButton
JCheckBox 
JRadioButton
.
.
.
GUI 계층구조 

Swing 클래스의 특징
클래스이름이 J자로 시작 
화려하고 다양한 컴포넌트로 쉽게 GUI 프로그래밍
스윙 컴포넌트는 2가지 유형
JComponent는 상속받는 클래스 
대부분 스윙 컴포넌트 
AWT의 Container 를 상속받는 몇 개의 클래스 
JApplet, JDialog JFrame 등 
JCompinent 
스윙 컴포넌트의 공통적인 속성을  구현한 추상 클래스
new JComponent() 생성 불가 

컨테이너와 컴포넌트 
컨테이너 다른 GUI 컴포넌트를 포함 할 수 있는 컴포넌트 
java.awt.Container 상속
종류
AWT 컨테이너 Panel
Swing 컨테이너 JPanel JFrame 

 최상위 컨테이너
 다른 컨테이너에 속하지 않고 독립적으로 출력가능한 컨테이너
 모든 컴포넌트는 컨테이너에 포함되어야 화면에 출력가능 

 컴포넌트
 컨테이너에 포함되어야 화면에 출력될 수 있는 순수  컴포넌트 

 즉, GUI 를 하나 만들면  가장 바깥쪽에 JFrame 이 있고 그 안에 여러 컴포넌트를 넣는다고 생각 

스윙 GUI 프로그램 만들기 
1. 스윙 프레임 작성
2. main() 메소드 작성 
3. 프레임에 스윙 컴포넌트 붙이기 

스윙 프레임 
모든 스윙 컴포넌트를 담는 최상위 GUI  컨테이너 
JFrame을 상속받아 구현 
컴포넌트가 화면에 보이려면 스윙 프레임에 부착되어야 함 
프레임을 닫으면 프레임 내의 모든 컴포넌트가 보이지 않게 됨
스윙 프레임 기본구성
프레임- 스윙 프로그램의 기본 틀
메뉴바 - 메뉴들이 부착되는 공간
컨텐트 팬 - GUI 컴포넌트들이 부탁되는 공간 

프로그램 작성 시 main()의 위치

클래스는 기능적으로 나뉘는게 좋지만 
GUI 프로그램은
메인 메소드를 프레임 클래스 내의 멤버를 작성하는것을 권장한다. 

왜? 
main() 메소드가 하는일이 거의 없기 때문 메인 메소그에서는 거의 객체프레임 및 생성만 하기 때문에 
보기 쉽게 같은 클래스 안에 쓴다. 

프레임에 컴포넌트 붙이기 
타이틀 달기 
컨텐트팬 알아내기 
컨텐트팬에 컴포넌트 달기
컨텐트팬 변경

스윙 프로그램의 종료 
응용프로그램 내에서 스스로 종료 
System.exti(0);
언제 어디서나 무조건 종료 
프레임의 X 버튼을 클릭하면
윈도우가 닫히는데 응용프로그램이 종료된 것은 아니다 
다시 setVisivle(true)를 호출하면 보이게 되고  이전처럼 작동함 

setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
이걸 추가하면 프레임의 종료 버튼을 클릭할 때 프레임이 종료되고 응용프로그램도 종료됨


 main()이 종료되어도 프레임이 살아있는 이유는?
 스윙 프로그램이 실행되는 동안 생성되는 스레드 

 메인 스레드 
 main()을 실행되는 스레드 
 자바 응용프로그램의 실행을 시작한 스레드 

 이벤트 분배 스레드 
 스윙 응용프로그램이 실행될 때 자동으로 실행되는 스레드이벤트 분배 스레드의 역할 

 자바 응용프로그램의 종료 조건 
 실행중인 사용자 스레드가 하나도 없을 때 종료
main()이 종료되어도 프레임이 살아있는 이유는
메인 스레드가 종료되어도 이벤트 분배 스레드가 살아있어 프레임 화면을 그리고 마우스나 키 입력을 받기 때문 

컨테이너와 배치 개념 
교실이 컨테이너 학생이 컴포넌트 
배치관리자layoutmanager(선생)

컨테이너마다 하나의 배치관리자가 존재 
삽입되는 모든 컴포넌트의 위치와 크기를 결정하고 관리한다. 

배치관리자 

FlowLayout 나란히 배치
setLayout(new FlowLayout) 배치관리자를 무엇으로 사용하는가에 따라서 컴포넌트 배치가 달라짐 
왼쪽에서 오른쪽으로 나란히 프레임 크기만큼 자동 줄바꿈 특성
생성자와속성
FlowLayout()
GridLayout 2차원으로 배열 
BorderLayout 하나의 컨테이너를 5개로 나누어 배치 
CardLayout 겹쳐서 배치

배치관리자가 없는 컨테이너 
응용프로그램에서 컴포넌트의 절대 크기와 절대위치 결정 
컴포넌트의 크기나 위치를 개발자 임의로 결정하고자 하는 경우 
게임인터페이스와 같이 시간이나 마우스/키보드의 입력에 따라 컴포넌트들의 위치와 크기가 수시로 변하는경우
여러 컴포넌트들이 서로 겹쳐 출력하고자 하는 경우 
컨테이너 배치관리자의 제거방법

컨테이너의 배치 관리자 제거 방법 
container.set.Layout(null);
Jpanel P = new JPanel();
p.setLayout(null);