public(접근제어자) 을 선언하면 다른 클래스에서 접근가능 


main  메소드
자바 프로그램은 메인 메소드에서 선언한다

메소드는 클래스 안에서만 작성 할 수 있다. 
메소드 내에서 선언된 변수는 지역변수이다 
메소드가 종료되면 소멸

system.out 표준출력 기본적으로 출력된다는 것이다. 

식별자 identifire  클래스, 변수, 상수, 메소드 등에 붙이는 이름 
특수문자 사용불가 but 언더바나 $는 사용가능 
자바언어의 키워드는 식별자로 사용불가 (예: for if)
영문자와 숫자만 사용한다고 생각하면 편함
불린리터털(true, false) null 은 사용 불가 
 c 와 같이 숫자를 첫 문자로 사용불가 


좋은 습관 
기본: 가독성이 좋아야 함 
클래스 이름 : 첫문자를 대문자로 or 각 단어의 첫문자를 대문자로
변수, 메소드 : 찻문자는 소문자 첫 이후 단어는 대문자로
상수 모든 문자를 대문자로 

자료형 
boolean 1비트
char 2바이트 유니코드 한글자 저장 
byte 1바이트
short 2바이트
int 4바이트
long 8바이트
float 4바이트
double 8바이트

어떤 환경에서라도 자료형의 크기는 변형이 없음 

문자열  String 은 기본타입이 아니다. 
String 클래스로 문자열을 표현한다.  

리터럴 = 상수라고 생각하면 편함

15 10진수 리터럴
015 8진수ㅡ리 터럴

0x15 15진수 리터럴

0b0101 2진수 리터럴 

실수 리터럴 은double 타입으로 컴파일
double d= 0.1234;
double e  = 1234E-4 1234x10^-4

문자 리터럴 'a'  char 형으로 한글자만 자정

자바에서는 boolean 타입이 존재

"_" 는 숫자리터럴에서 사용가능 숫자하고 숫자 사이에 가독성을 좋게하기 위해 사용

오토 키워드 var 오류가 발생할 확률이 높아질 수 있음 

상수선언  final 선언시 초기값만 사용 변경불가 

자바에서 키 입력 
System.in
키보드로부터 직접읽는 자바의 표준 입력 스트림
문제점: 키 값을 바이트 데이터로 넘겨주므로(10101010) 응용프로그램이 문자정보로 변환해야함

따라서 Scanner로 쉽게 키 입력 

읽은 바이트를 ㅁ 다양한 자료형으로 변환하여 리턴 

객체를 생성 import java.util.Scanner;  import 는 누가 만들어 놓은 객체를 먼저 선언하고 사용한다

String next()  토큰을 문자열로 리턴
증감연산

a++ a를 1증가하고 증가 전의 값을 반환 

a=1;
b=a++ 
b=1 b=2

a+=b => a+b 

System.out.println(0.1+0.1+0.1+1.0+0.1+0.1+0.1+0.1+0.1)
의 출력값은 0.99999999 로 나오는데 이는 컴퓨터가 10진수 0.1이라는 숫자를  이진수로 바꾸지 못하기 때문이다

System.out.println("A"+2+3) => A23 문자열A와 숫자 23을 더하는데 문자형이 맞지 않아 2,3 을 문자열로 바꾸어서 연산
System.out.println(2+3+"A") => 5A 5라는 정수와 A 라는 문자를 더하는데 자료형이 맞지않아 5를 문자열로 바꾸어 연산 
 
 시프트 연산자
 byte b (byte)(a<<2) 최상위 비트는 시프트 전의 최상위 비트로 채운다 즉 음수는 음수로 양수는 양수로 
 <<< 는 무조건 최상위 비트를 0으로 채운다 숫자의 부호가 바뀔 수 있다. 
 
 &&연산의 경우 연산을 하기전에  false 면 연산을 하지 않고 바로 반환한다. 
 || 도 마찬가지 왼쪽 식이 이미 true 면 연산을 하지 않는다
 short circuit 라고 한다. 
